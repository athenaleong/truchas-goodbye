[{"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/index.js":"1","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/reportWebVitals.js":"2","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/App.jsx":"3","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/map/map.jsx":"4","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/popUp/popUp.jsx":"5","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/form/form.jsx":"6","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/rdu.jsx":"7","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/errorBoundary/errorBoundary.jsx":"8","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/depre.jsx":"9","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/drop.jsx":"10","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/mongo.js":"11"},{"size":517,"mtime":1606867345789,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606864643604,"results":"14","hashOfConfig":"13"},{"size":986,"mtime":1607615812548,"results":"15","hashOfConfig":"13"},{"size":1760,"mtime":1606963370783,"results":"16","hashOfConfig":"13"},{"size":754,"mtime":1607026764982,"results":"17","hashOfConfig":"13"},{"size":3305,"mtime":1607641605011,"results":"18","hashOfConfig":"13"},{"size":676,"mtime":1607105418113,"results":"19","hashOfConfig":"13"},{"size":694,"mtime":1607104909825,"results":"20","hashOfConfig":"13"},{"size":1767,"mtime":1607610598399,"results":"21","hashOfConfig":"13"},{"size":1632,"mtime":1607643981887,"results":"22","hashOfConfig":"13"},{"size":500,"mtime":1607642622593,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"qh465p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/index.js",["53"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["54","55"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/reportWebVitals.js",[],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/App.jsx",["56"],"import logo from './logo.svg';\nimport './App.css';\nimport MapSection from './components/map/map';\nimport React, { useState } from 'react';\nimport PopUp from './components/popUp/popUp';\nimport Form from './components/form/form';\nimport ErrorBoundary from './components/errorBoundary/errorBoundary';\n\nconst location = {\n  lat: 36.048180,\n  lng: -105.811290\n}\n\n\nfunction App() {\n  \n  const [modalShow, setModalShow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  function onMapClick() {\n    if (editMode) {\n      setModalShow(true);\n    }\n  }\n\n  return (\n  <div className=\"App\">\n    <button onClick={() => setEditMode(!editMode)}> Toggle Edit Mode </button>\n    <MapSection location={location} zoomLevel={16} onClick={onMapClick}/>\n    <button onClick={()=> setModalShow(true)}>Pop Up</button>\n    <ErrorBoundary>\n    <PopUp onHide={() => setModalShow(false)} show={modalShow} body={<Form></Form>}> </PopUp>\n    </ErrorBoundary>\n  </div>\n  )}\n\nexport default App;\n","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/map/map.jsx",["57"],"import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './map.css';\n\nconst createMapOptions = function (map) {\n    return {\n        mapTypeId: map.MapTypeId.HYBRID,\n        styles: stylesArray\n    }\n}\n// green : 5B8E7D\n\nconst stylesArray =  [\n                    {featureType: \"all\", elementType: \"labels.text.stroke\", stylers:[{color: \"#5B8E7D\"}]},\n                    {featureType: \"all\", elementType: \"labels.text.fill\", stylers:[{color: \"#f5f1e6\"}]},\n                    {featureType: \"water\", elementType: \"geometry.fill\", stylers:[{color: \"#01295f\", \"weight\": 8}]},\n                    {featureType: \"road.highway\", elementType: \"geometry.fill\", stylers : [{ color : \"#e9bc62\"}]},\n                    {featureType: \"road.highway\", elementType: \"labels.text.stroke\", stylers : [{ color : \"#00000\"}]},\n                    {featureType:\"road.local\", elementType: \"geometry\", stylers: [{color: \"#f5f1e6\"}]}]\n\nconst _onClick = ({lat, lng}) => console.log(lat);\n// ES5 users\n\n\nconst Map = ({location, zoomLevel, onClick}) => (\n    <div className=\"map\">\n        <h2>Truchas Peaks</h2>\n        <div className=\"google-map\">\n            <GoogleMapReact\n                bootstrapURLKeys = {{'key': 'AIzaSyB3QgxQzYNKaDkSDBTEl3-wCYUFnQ9ilKs'}}\n                defaultCenter={location}\n                defaultZoom={zoomLevel}\n                options={(map) => createMapOptions(map)} \n                onClick={onClick}>\n            </GoogleMapReact>\n        </div>\n    </div>\n);\n\n\n\n// const styleDict = {\n//     apTypeId: maps.mapTypeId.SATELLITE,\n// }\n// options = {map => ({ mapTypeId: map.MapTypeId.SATELLITE, styles: [{\"featureType\": \"road.highway\", \"elementType\": \"geometry\", \"stylers\" : [{ \"color\" : \"#e9bc62\"}]}]})}\n\nexport default Map;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/popUp/popUp.jsx",["58"],"import React from 'react';\nimport './popUp.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction PopUp(props) {\n    return(\n        <Modal {... props} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create new </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.body}\n            </Modal.Body>\n            {/* <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}> Close </Button>\n                <Button variant=\"primary\" onClick={props.onHide}> Add New Marker </Button>\n            </Modal.Footer> */}\n        </Modal>\n    );\n}\n\nexport default PopUp;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/form/form.jsx",["59","60","61"],"import './form.css';\nimport React from 'react';\nimport { Controller, useForm, useFormContext } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport ErrorBoundary from '../errorBoundary/errorBoundary'\nimport Dropzone from '../dropzone/drop'\nimport connectDb from '../../mongo'\n\n\n function Form(props) {\n\n    const {register, handleSubmit, control, setValue} = useForm();\n    const onSubmit = async (data) => {\n        alert(JSON.stringify(data))\n\n        // const client = await connectDb();\n        \n        const images = data['img'];\n        console.log('check');\n        console.log(images)\n        \n    };\n\n\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input name=\"title\" ref={register({required: true, maxLength:10})} />\n            <textarea name=\"description\" ref={register({required: true, maxLength:30})} />\n\n            <input name=\"icon\" type=\"radio\" value=\"1\" ref={register({required: true, max:1})}/>\n            <input name=\"icon\" type=\"radio\" value=\"2\" ref={register({required: true, max:1})} />\n            <input name=\"icon\" type=\"radio\" value=\"3\" ref={register({required: true, max:1})} />\n            <input name=\"icon\" type=\"radio\" value=\"4\" ref={register({required: true, max:1})} />\n\n            <Controller\n                name=\"people\"\n                as={Select}\n                isMulti\n                options={[\n                    { value: \"chocolate\", label: \"Chocolate\" },\n                    { value: \"strawberry\", label: \"Strawberry\" },\n                    { value: \"vanilla\", label: \"Vanilla\" }]}\n                control={control}\n                rules={{required:true}}\n                defaultValue={null}\n            />\n\n            <Controller\n                name=\"images\"\n                control={control}\n                render={(onChange) =>\n                    <Dropzone onChange={onChange} register={register} setValue={setValue}></Dropzone>\n                }\n            \n            />\n\n            <input type=\"submit\" />\n        </form>\n    );\n}\n\nexport default Form\n\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n\n// export default function App() {\n//   const { register, handleSubmit, errors } = useForm();\n//   const onSubmit = data => console.log(data);\n//   console.log(errors);\n  \n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <input type=\"text\" placeholder=\"Title\" name=\"Title\" ref={register({required: true})} />\n//       <select name=\"icon\" ref={register({ required: true })}>\n//         <option value=\"1\">1</option>\n//         <option value=\"2\">2</option>\n//         <option value=\"3\">3</option>\n//         <option value=\"4\">4</option>\n//         <option value=\"5\">5</option>\n//       </select>\n//       <input type=\"text\" placeholder=\"Description\" name=\"Description\" ref={register({required: true, maxLength: 30, pattern: /^\\S+@\\S+$/i})} />\n//       <select name=\"people\" ref={register}>\n//         <option value=\"a\">a</option>\n//         <option value=\"b\">b</option>\n//         <option value=\"c\">c</option>\n//         <option value=\"d\">d</option>\n//         <option value=\"e\">e</option>\n//         <option value=\"f\">f</option>\n//         <option value=\"g\">g</option>\n//       </select>\n\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// }","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/rdu.jsx",["62"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/errorBoundary/errorBoundary.jsx",[],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/depre.jsx",["63","64","65","66","67"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/drop.jsx",["68","69","70","71"],"import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport \"./drop.css\";\n\nfunction Dropzone(props) {\n    const {onChange, register, setValue} = props\n    const [files, setFiles] = React.useState([]);\n    const [url, setURL] = React.useState([]);\n    const onDrop = React.useCallback(acceptedFiles => {\n        const imgURL = acceptedFiles.map(x => {\n                        console.log(x);\n                        let url = URL.createObjectURL(x);\n                        console.log(url);\n                        return url}\n                        );\n        console.log(imgURL);\n        setURL(prev => [...prev, ...imgURL]); //Able to retrieve previous state\n        setFiles(prev => [...prev, ...acceptedFiles]); //Able to retrieve previous state\n\n\n        console.log(\"file accepted\")\n    }, []);\n    const { getRootProps, getInputProps } = useDropzone({onDrop, multiple:true, accept: 'image/*'});\n\n    useEffect(() => {\n        register({name: 'images'});\n    }, [])\n\n    useEffect(() => {\n        setValue(\"images\", url); //TOEDIT\n        console.log(\"set value\");\n    }, [url])\n\n    const fileList = files.map(file => (\n    <li key={file.path}>\n        {file.path} - {file.size} bytes\n    </li>\n    ));\n\n\n\n    return (\n    <section className=\"container\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <aside>\n        <ul>{fileList}</ul>\n        </aside>\n    </section>\n    );\n    }\n\nexport default Dropzone;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/mongo.js",[],{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"81","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":15},{"ruleId":"72","severity":1,"message":"82","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"72","severity":1,"message":"83","line":3,"column":31,"nodeType":"74","messageId":"75","endLine":3,"endColumn":45},{"ruleId":"72","severity":1,"message":"84","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":21},{"ruleId":"72","severity":1,"message":"85","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":17},{"ruleId":"72","severity":1,"message":"86","line":12,"column":11,"nodeType":"74","messageId":"75","endLine":12,"endColumn":23},{"ruleId":"72","severity":1,"message":"87","line":1,"column":29,"nodeType":"74","messageId":"75","endLine":1,"endColumn":38},{"ruleId":"72","severity":1,"message":"88","line":8,"column":12,"nodeType":"74","messageId":"75","endLine":8,"endColumn":24},{"ruleId":"72","severity":1,"message":"89","line":9,"column":22,"nodeType":"74","messageId":"75","endLine":9,"endColumn":30},{"ruleId":"72","severity":1,"message":"90","line":13,"column":70,"nodeType":"74","messageId":"75","endLine":13,"endColumn":82},{"ruleId":"72","severity":1,"message":"91","line":13,"column":84,"nodeType":"74","messageId":"75","endLine":13,"endColumn":96},{"ruleId":"72","severity":1,"message":"92","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"93","line":8,"column":12,"nodeType":"74","messageId":"75","endLine":8,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":29,"column":8,"nodeType":"96","endLine":29,"endColumn":10,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":34,"column":8,"nodeType":"96","endLine":34,"endColumn":13,"suggestions":"99"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'logo' is defined but never used.","'_onClick' is assigned a value but never used.","'Button' is defined but never used.","'useFormContext' is defined but never used.","'ErrorBoundary' is defined but never used.","'connectDb' is defined but never used.","'handleSubmit' is assigned a value but never used.","'useEffect' is defined but never used.","'selectedFile' is assigned a value but never used.","'register' is assigned a value but never used.","'isDragAccept' is assigned a value but never used.","'isDragReject' is assigned a value but never used.","'ReactDOM' is defined but never used.","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [register]",{"range":"108","text":"109"},"Update the dependencies array to be: [setValue, url]",{"range":"110","text":"111"},[1040,1042],"[register]",[1150,1155],"[setValue, url]"]