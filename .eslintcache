[{"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/index.js":"1","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/reportWebVitals.js":"2","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/App.jsx":"3","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/map/map.jsx":"4","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/popUp/popUp.jsx":"5","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/form/form.jsx":"6","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/rdu.jsx":"7","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/errorBoundary/errorBoundary.jsx":"8","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/depre.jsx":"9","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/drop.jsx":"10","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/mongo.js":"11","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/drawer/drawer.jsx":"12"},{"size":517,"mtime":1607840745678,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606864643604,"results":"15","hashOfConfig":"14"},{"size":3055,"mtime":1607913795820,"results":"16","hashOfConfig":"14"},{"size":4882,"mtime":1607945386018,"results":"17","hashOfConfig":"14"},{"size":754,"mtime":1607026764982,"results":"18","hashOfConfig":"14"},{"size":2910,"mtime":1607913821393,"results":"19","hashOfConfig":"14"},{"size":676,"mtime":1607105418113,"results":"20","hashOfConfig":"14"},{"size":694,"mtime":1607104909825,"results":"21","hashOfConfig":"14"},{"size":1767,"mtime":1607610598399,"results":"22","hashOfConfig":"14"},{"size":2096,"mtime":1607770840803,"results":"23","hashOfConfig":"14"},{"size":500,"mtime":1607642622593,"results":"24","hashOfConfig":"14"},{"size":1925,"mtime":1607912958265,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"qh465p",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/index.js",["58"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["59","60"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/reportWebVitals.js",[],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/App.jsx",["61","62","63","64","65","66"],"import logo from './logo.svg';\nimport './App.css';\nimport MapSection from './components/map/map';\nimport React, { useEffect, useRef, useState } from 'react';\nimport PopUp from './components/popUp/popUp';\nimport Form from './components/form/form';\nimport ErrorBoundary from './components/errorBoundary/errorBoundary';\nimport Drawer from './components/drawer/drawer';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { Button } from 'react-bootstrap';\n\n\nconst location = {\n  lat: 36.048180,\n  lng: -105.811290\n}\n\n\nfunction App() {\n  //Map\n  const [modalShow, setModalShow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n\n  //Display Feature\n  const [feature, setFeature] = useState([]); //TODO: Expand to walks/path tracing\n  const [pointQuery, setPointQuery] = useState({});\n  const [geoJSON, setGeoJSON] = useState([]); //GEOJSONJson Display \n\n  const mapRef = useRef();\n\n  const [allUser, setAllUser] = useState([]); //TODO: move this to form.jsx. state hook wasn't working. not sure why\n\n  //Drawer \n  const [drawerShow, setDrawerShow] = useState(false);\n  const [selectedTagId, setSelectedTagId] = useState(null);\n  const [drawerJSON, setDrawerJSON] = useState('');\n\n  function onMapClick(obj) {\n    if (editMode) {\n      setModalShow(true);\n    }\n    setLat(obj.lat);\n    setLng(obj.lng);\n  }\n\n\n  useEffect(() => {\n    let data = qs.stringify({\n      'query': pointQuery\n     });\n    let config = {\n       method: 'post',\n       url: 'http://localhost:5555/getGeoJSON', //TOEDIT\n       headers: { \n         'Content-Type': 'application/x-www-form-urlencoded'\n       },\n       data : data\n     };\n     \n     axios(config)\n     .then(function (response) {\n       let geoJSON= response.data;\n       setGeoJSON(geoJSON); console.log(`data display: ${geoJSON}`); \n     })\n  }, [pointQuery, modalShow])\n\n\n  useEffect(() => {\n    axios.get('http://localhost:5555/getUser').then(res => {\n      console.log(`res: ${JSON.stringify(res.data)}`);\n      setAllUser(res.data);})\n  }, [])\n\n  useEffect(() => {\n    axios.get(`http://localhost:5555/getTag?id=${selectedTagId}`).then(res => {\n      console.log(`res: ${JSON.stringify(res.data)}`);\n      setDrawerJSON(res.data);\n    })\n  }, [selectedTagId])\n\n  return (\n  <div className='App'>\n    <div className={drawerShow? 'Main compress' : 'Main'}>\n      <button onClick={() => setEditMode(!editMode)}> Toggle Edit Mode </button>\n      <MapSection location={location} zoomLevel={16} onClick={onMapClick} mapRef={mapRef} geoJSON={geoJSON} setSelectedTagId={setSelectedTagId} setDrawerShow={setDrawerShow}/> \n      <PopUp onHide={() => setModalShow(false)} show={modalShow} body={<Form lat={lat} lng={lng} setModalShow={setModalShow} allUser={allUser} setSelectedTagId={setSelectedTagId} setDrawerShow={setDrawerShow}></Form>}> </PopUp>\n    </div>\n    <aside>\n    <Drawer setDrawerShow={setDrawerShow} drawerShow={drawerShow} drawerJSON={drawerJSON}></Drawer>\n    </aside>\n  </div>\n  )}\n\nexport default App;\n","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/map/map.jsx",["67","68"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/popUp/popUp.jsx",["69"],"import React from 'react';\nimport './popUp.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction PopUp(props) {\n    return(\n        <Modal {... props} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create new </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.body}\n            </Modal.Body>\n            {/* <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}> Close </Button>\n                <Button variant=\"primary\" onClick={props.onHide}> Add New Marker </Button>\n            </Modal.Footer> */}\n        </Modal>\n    );\n}\n\nexport default PopUp;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/form/form.jsx",["70","71","72","73","74"],"import './form.css';\nimport React, {useEffect , useState} from 'react';\nimport { Controller, useForm, useFormContext } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport ErrorBoundary from '../errorBoundary/errorBoundary'\nimport Dropzone from '../dropzone/drop'\nconst axios = require('axios');\nvar FormData = require('form-data');\n\n function Form(props) {\n    const {lat, lng, setModalShow, allUser, setSelectedTagId, setDrawerShow} = props;\n\n    const {register, handleSubmit, control, setValue}  = useForm();\n\n    const onSubmit = async (data) => {\n\n        const images = data.images;\n        let imgId = [];\n        if (images.length != 0) {\n            let formData = new FormData();\n            images.forEach((img) => {\n                formData.append('img', img);\n            })\n\n\n            let config = {\n                method: 'post',\n                url: 'http://localhost:5555/uploadImage',\n                data : formData\n            }\n\n            // TODO: change for production\n            let res = await axios(config);\n            imgId = res.data.id;  \n        } \n\n        delete data['images'];\n        data = {...data, imgId: imgId, lat: lat, lng: lng, category:\"Point\"};\n\n        console.log(JSON.stringify(data));\n        \n        let res = await axios.post('http://localhost:5555/uploadPointer', data, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        setModalShow(false);\n        setSelectedTagId(res.data);\n        setDrawerShow(true);\n\n\n\n    };\n    \n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n            <input name=\"title\" ref={register({required: true, maxLength:10})} />\n            <textarea name=\"description\" ref={register({required: true, maxLength:30})} />\n            <div>\n                <input name=\"icon\" type=\"radio\" value=\"1\" ref={register({required: true, max:1})}/>\n                <input name=\"icon\" type=\"radio\" value=\"2\" ref={register({required: true, max:1})} />\n                <input name=\"icon\" type=\"radio\" value=\"3\" ref={register({required: true, max:1})} />\n                <input name=\"icon\" type=\"radio\" value=\"4\" ref={register({required: true, max:1})} />\n            </div>\n            <Controller\n                name=\"people\"\n                as={Select}\n                isMulti\n                options={[{value:'all', label:'all users'}, ...allUser]}\n                control={control}\n                rules={{required:true}}\n                defaultValue={null}\n            />\n\n            <Controller\n                name=\"images\"\n                control={control}\n                render={(onChange) =>\n                    <Dropzone onChange={onChange} register={register} setValue={setValue}></Dropzone>\n                }\n            \n            />\n\n            <input type=\"submit\" />\n        </form>\n    );\n}\n\nexport default Form\n\n","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/rdu.jsx",["75"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/errorBoundary/errorBoundary.jsx",[],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/depre.jsx",["76","77","78","79","80"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/drop.jsx",["81","82","83","84","85","86","87"],"import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport \"./drop.css\";\n\nfunction Dropzone(props) {\n    const {onChange, register, setValue} = props\n    const [files, setFiles] = React.useState([]);\n    const [buffer, setBuffer] = React.useState([]);\n    const onDrop = React.useCallback(async function(acceptedFiles) {\n\n        acceptedFiles.forEach(async function(file) {\n            const reader = new FileReader();\n            reader.onload = function(e) {\n                // const arrayBuffer = reader.result;\n                // const Uint8 = new Uint8Array(arrayBuffer)\n                // console.log(Uint8);\n                // buffer.push(Uint8); //not sure why setBuffer doesn't work\n                // console.log(`buffer : ${buffer}`);\n                console.log(`file type ${typeof file}`);\n                const base64 = reader.result;\n                buffer.push(base64);\n                files.push(file);\n                // console.log(`buffer: ${buffer}`);\n\n            }\n            // reader.readAsArrayBuffer(file);\n            reader.readAsDataURL(file);\n\n        });\n\n        // setFiles(prev => [...prev, ...acceptedFiles]); //Able to retrieve previous state\n        console.log(\"file accepted\");\n    }, []);\n    const { getRootProps, getInputProps } = useDropzone({onDrop, multiple:true, accept: 'image/*'});\n\n    useEffect(() => {\n        register({name: 'images'});\n    }, [])\n\n    useEffect(() => {\n        console.log(`files ${files}`)\n        setValue(\"images\", files); \n        console.log(\"set value\");\n    }, [files])\n\n    const fileList = files.map(file => (\n    <li key={file.path}>\n        {file.path} - {file.size} bytes\n    </li>\n    ));\n\n\n\n    return (\n    <section className=\"container\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <aside>\n        <ul>{fileList}</ul>\n        </aside>\n    </section>\n    );\n    }\n\nexport default Dropzone;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/mongo.js",[],["88","89"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/drawer/drawer.jsx",["90","91","92","93","94","95","96","97","98"],"import { render } from '@testing-library/react';\nimport axios from 'axios';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { Image } from 'react-bootstrap';\nimport './drawer.css';\n\nfunction Drawer(props) {\n    const {drawerShow, setDrawerShow, drawerJSON} = props\n    const [imageId, setImageId] = useState([]);\n    const [imgURL, setImageURL] = useState([]);\n    let drawerClass = drawerShow ? 'side-drawer open': 'side-drawer';\n    var drawerContent; \n\n    useEffect(async () => {\n\n        if (drawerJSON.imgId != imageId) {\n            setImageId(drawerJSON.imgId);\n            // let searchParam = new URLSearchParams({'id' : drawerJSON.imgId}).toString();\n            if (drawerJSON.imgId != undefined && drawerJSON.imgId.length != 0) {\n                // console.log(`AAAAA ${drawerJSON.imgId.length}`)\n                let queryString = drawerJSON.imgId.map((id) => \n                    `id=${id}`).join(\"&\");\n                console.log(`query string : ${queryString}`)\n                let getUrl = `http://localhost:5555/getImage?${queryString}`\n                // console.log(`url : ${getUrl}`)\n                axios.get(getUrl).then(res => {\n                    setImageURL(res.data);\n                })\n            }\n        }\n\n    }, [drawerJSON])\n\n    const imgList = imgURL.map(m => (\n        <img src={m}/>\n    ));\n\n\n\n    return (\n        <div className={drawerClass} onClick={() => setDrawerShow(!drawerShow)}>\n            {/* <button>Toggle</button>/ */}\n            {/* <h1>Slidinggg</h1> */}\n            {/* <p>{JSON.stringify(drawerJSON)}</p> */}\n            {imgList}\n            <h2>{drawerJSON.title}</h2>\n            <p>{drawerJSON.description}</p>\n            {drawerJSON.people && \n                <ul>\n                    {drawerJSON.people.map(p => <li>{p.label}</li>)}\n                </ul>\n            }\n\n        </div>\n        \n    )\n}\n\nexport default Drawer\n",{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"108","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":21},{"ruleId":"99","severity":1,"message":"109","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":28,"column":10,"nodeType":"101","messageId":"102","endLine":28,"endColumn":17},{"ruleId":"99","severity":1,"message":"111","line":28,"column":19,"nodeType":"101","messageId":"102","endLine":28,"endColumn":29},{"ruleId":"99","severity":1,"message":"112","line":29,"column":22,"nodeType":"101","messageId":"102","endLine":29,"endColumn":35},{"ruleId":"99","severity":1,"message":"113","line":2,"column":20,"nodeType":"101","messageId":"102","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"114","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"109","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"113","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":25},{"ruleId":"99","severity":1,"message":"115","line":2,"column":28,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"99","severity":1,"message":"116","line":3,"column":31,"nodeType":"101","messageId":"102","endLine":3,"endColumn":45},{"ruleId":"99","severity":1,"message":"108","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":19,"column":27,"nodeType":"119","messageId":"120","endLine":19,"endColumn":29},{"ruleId":"99","severity":1,"message":"121","line":12,"column":11,"nodeType":"101","messageId":"102","endLine":12,"endColumn":23},{"ruleId":"99","severity":1,"message":"113","line":1,"column":29,"nodeType":"101","messageId":"102","endLine":1,"endColumn":38},{"ruleId":"99","severity":1,"message":"122","line":8,"column":12,"nodeType":"101","messageId":"102","endLine":8,"endColumn":24},{"ruleId":"99","severity":1,"message":"123","line":9,"column":22,"nodeType":"101","messageId":"102","endLine":9,"endColumn":30},{"ruleId":"99","severity":1,"message":"124","line":13,"column":70,"nodeType":"101","messageId":"102","endLine":13,"endColumn":82},{"ruleId":"99","severity":1,"message":"125","line":13,"column":84,"nodeType":"101","messageId":"102","endLine":13,"endColumn":96},{"ruleId":"99","severity":1,"message":"126","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"127","line":8,"column":12,"nodeType":"101","messageId":"102","endLine":8,"endColumn":20},{"ruleId":"99","severity":1,"message":"128","line":9,"column":19,"nodeType":"101","messageId":"102","endLine":9,"endColumn":27},{"ruleId":"99","severity":1,"message":"129","line":10,"column":20,"nodeType":"101","messageId":"102","endLine":10,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":35,"column":8,"nodeType":"132","endLine":35,"endColumn":10,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":40,"column":8,"nodeType":"132","endLine":40,"endColumn":10,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":46,"column":8,"nodeType":"132","endLine":46,"endColumn":15,"suggestions":"137"},{"ruleId":"103","replacedBy":"138"},{"ruleId":"105","replacedBy":"139"},{"ruleId":"99","severity":1,"message":"140","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":16},{"ruleId":"99","severity":1,"message":"141","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":15},{"ruleId":"99","severity":1,"message":"142","line":13,"column":9,"nodeType":"101","messageId":"102","endLine":13,"endColumn":22},{"ruleId":"130","severity":1,"message":"143","line":15,"column":15,"nodeType":"144","endLine":33,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":17,"column":30,"nodeType":"119","messageId":"120","endLine":17,"endColumn":32},{"ruleId":"117","severity":1,"message":"118","line":20,"column":34,"nodeType":"119","messageId":"120","endLine":20,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":20,"column":74,"nodeType":"119","messageId":"120","endLine":20,"endColumn":76},{"ruleId":"130","severity":1,"message":"145","line":33,"column":8,"nodeType":"132","endLine":33,"endColumn":20,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":36,"column":9,"nodeType":"149","endLine":36,"endColumn":23},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'logo' is defined but never used.","'ErrorBoundary' is defined but never used.","'Button' is defined but never used.","'feature' is assigned a value but never used.","'setFeature' is assigned a value but never used.","'setPointQuery' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useFormContext' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'handleSubmit' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'register' is assigned a value but never used.","'isDragAccept' is assigned a value but never used.","'isDragReject' is assigned a value but never used.","'ReactDOM' is defined but never used.","'onChange' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'setBuffer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'buffer' and 'files'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["154"],["150"],["151"],"'render' is defined but never used.","'Image' is defined but never used.","'drawerContent' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'imageId'. Either include it or remove the dependency array.",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [buffer, files]",{"range":"164","text":"165"},"Update the dependencies array to be: [register]",{"range":"166","text":"167"},"Update the dependencies array to be: [files, setValue]",{"range":"168","text":"169"},"Update the dependencies array to be: [drawerJSON, imageId]",{"range":"170","text":"171"},[1298,1300],"[buffer, files]",[1470,1472],"[register]",[1612,1619],"[files, setValue]",[1281,1293],"[drawerJSON, imageId]"]