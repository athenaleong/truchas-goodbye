[{"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/index.js":"1","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/reportWebVitals.js":"2","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/App.jsx":"3","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/map/map.jsx":"4","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/popUp/popUp.jsx":"5","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/form/form.jsx":"6","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/rdu.jsx":"7","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/errorBoundary/errorBoundary.jsx":"8","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/depre.jsx":"9","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/drop.jsx":"10","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/mongo.js":"11"},{"size":517,"mtime":1606867345789,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606864643604,"results":"14","hashOfConfig":"13"},{"size":2560,"mtime":1607826637440,"results":"15","hashOfConfig":"13"},{"size":5227,"mtime":1607826458490,"results":"16","hashOfConfig":"13"},{"size":754,"mtime":1607026764982,"results":"17","hashOfConfig":"13"},{"size":2871,"mtime":1607823964653,"results":"18","hashOfConfig":"13"},{"size":676,"mtime":1607105418113,"results":"19","hashOfConfig":"13"},{"size":694,"mtime":1607104909825,"results":"20","hashOfConfig":"13"},{"size":1767,"mtime":1607610598399,"results":"21","hashOfConfig":"13"},{"size":2096,"mtime":1607770840803,"results":"22","hashOfConfig":"13"},{"size":500,"mtime":1607642622593,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"qh465p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/index.js",["55"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["56","57"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/reportWebVitals.js",[],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/App.jsx",["58","59","60","61","62","63"],"import logo from './logo.svg';\nimport './App.css';\nimport MapSection from './components/map/map';\nimport React, { useEffect, useRef, useState } from 'react';\nimport PopUp from './components/popUp/popUp';\nimport Form from './components/form/form';\nimport ErrorBoundary from './components/errorBoundary/errorBoundary';\nimport axios from 'axios';\nimport qs from 'qs';\n\nconst location = {\n  lat: 36.048180,\n  lng: -105.811290\n}\n\nfunction App() {\n  //Map\n  const [modalShow, setModalShow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n\n  //Side Bar\n  const [sideBarShow, setSideBarShow] = useState(true);\n  const [sideBarContent, setSideBarContent] = useState(\"some text\");\n\n  //Display Feature\n  const [feature, setFeature] = useState([]); //TODO: Expand to walks/path tracing\n  const [pointQuery, setPointQuery] = useState({});\n  const [geoJSON, setGeoJSON] = useState([]); //GEOJSONJson Display \n\n  const mapRef = useRef();\n\n  const [allUser, setAllUser] = useState([]); //TODO: move this to form.jsx. state hook wasn't working. not sure why\n\n  function onMapClick(obj) {\n    if (editMode) {\n      setModalShow(true);\n    }\n    setLat(obj.lat);\n    setLng(obj.lng);\n  }\n\n\n  useEffect(() => {\n    let data = qs.stringify({\n      'query': pointQuery\n     });\n    let config = {\n       method: 'post',\n       url: 'http://localhost:5555/getGeoJSON', //TOEDIT\n       headers: { \n         'Content-Type': 'application/x-www-form-urlencoded'\n       },\n       data : data\n     };\n     \n     axios(config)\n     .then(function (response) {\n       let geoJSON= response.data;\n       setGeoJSON(geoJSON); console.log(`data display: ${geoJSON}`); \n     })\n  }, [pointQuery, modalShow])\n\n\n  useEffect(() => {\n    axios.get('http://localhost:5555/getUser').then(res => {\n      console.log(`res: ${JSON.stringify(res.data)}`);\n      setAllUser(res.data);})\n  }, [])\n\n  return (\n  <div className=\"App\">\n    <div className=\"Main\">\n      <button onClick={() => setEditMode(!editMode)}> Toggle Edit Mode </button>\n      <MapSection location={location} zoomLevel={16} onClick={onMapClick} mapRef={mapRef} geoJSON={geoJSON}/> \n      <ErrorBoundary>\n      <PopUp onHide={() => setModalShow(false)} show={modalShow} body={<Form lat={lat} lng={lng} setModalShow={setModalShow} allUser={allUser}></Form>}> </PopUp>\n      </ErrorBoundary>\n    </div>\n\n    {sideBarShow && \n      <div className=\"SideBar\"> \n        {sideBarContent}\n      </div>\n    }\n  </div>\n  )}\n\nexport default App;\n","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/map/map.jsx",["64","65","66"],"import GoogleMapReact from 'google-map-react';\nimport { useState, useEffect } from 'react';\nimport './map.css';\nimport useSupercluster from \"use-supercluster\";\nimport axios from 'axios'\n\nconst createMapOptions = function (map) {\n    return {\n        mapTypeId: map.MapTypeId.HYBRID,\n        styles: stylesArray\n    }\n}\n// green : 5B8E7D\nconst Marker = ({ children }) => children;\n\nconst stylesArray =  [\n                    {featureType: \"all\", elementType: \"labels.text.stroke\", stylers:[{color: \"#5B8E7D\"}]},\n                    {featureType: \"all\", elementType: \"labels.text.fill\", stylers:[{color: \"#f5f1e6\"}]},\n                    {featureType: \"water\", elementType: \"geometry.fill\", stylers:[{color: \"#01295f\", \"weight\": 8}]},\n                    {featureType: \"road.highway\", elementType: \"geometry.fill\", stylers : [{ color : \"#e9bc62\"}]},\n                    {featureType: \"road.highway\", elementType: \"labels.text.stroke\", stylers : [{ color : \"#00000\"}]},\n                    {featureType:\"road.local\", elementType: \"geometry\", stylers: [{color: \"#f5f1e6\"}]}]\n\n\nconst Map = ({location, zoomLevel, onClick, mapRef, geoJSON}) => {\n\n\n    const [bounds, setBounds] = useState(null);\n    const [zoom, setZoom] = useState(zoomLevel);\n\n    console.log(`geoJSON: ${geoJSON.length}`);\n\n\n    const {clusters, supercluster} = useSupercluster({\n        points : geoJSON,\n        bounds : bounds,\n        zoom: zoom,\n        options: { radius: 75, maxZoom: 20 }\n    });\n\n    const markerOnClick = async (id) => {\n        const json = await axios.get(`http://localhost:5555/getTag?id=${id}`)\n    };\n\n    return (\n    <div className=\"map\">\n        <h2>Truchas Peaks</h2>\n        <div className=\"google-map\">\n            <GoogleMapReact\n                bootstrapURLKeys = {{'key': 'AIzaSyB3QgxQzYNKaDkSDBTEl3-wCYUFnQ9ilKs'}}\n                defaultCenter={location}\n                defaultZoom={zoomLevel}\n                options={(map) => createMapOptions(map)} \n                onClick={onClick}\n                onChange={({zoom, bounds}) => {\n                    setZoom(zoom);\n                    setBounds([\n                        bounds.nw.lng,  \n                        bounds.se.lat,\n                        bounds.se.lng,\n                        bounds.nw.lat,\n                    ])\n                }}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map }) => {\n                    mapRef.current = map;\n                }}\n            >\n            {/* Markers Here  */}\n            {clusters.map(cluster => {\n                const [longitude, latitude] = cluster.geometry.coordinates;\n                const {cluster : isCluster, point_count : pointCount} = cluster.properties;\n\n                if (isCluster) {\n                    return (\n                        <Marker\n                            key={`cluster-${cluster.id}`}\n                            lat={latitude}\n                            lng={longitude}\n                        >\n                            <div\n                                className=\"cluster-marker\"\n                                style={{\n                                    width: `${10 + (pointCount / geoJSON.length) * 20}px`,\n                                    height: `${10 + (pointCount / geoJSON.length) * 20}px`\n                                }}\n                                onClick={() => {\n                                    const expansionZoom = Math.min(\n                                    supercluster.getClusterExpansionZoom(cluster.id),\n                                    20\n                                    );\n                                    mapRef.current.setZoom(expansionZoom);\n                                    mapRef.current.panTo({ lat: latitude, lng: longitude });\n                                }}\n                            >\n                            {pointCount}\n                            </div>\n                        </Marker>\n                    );\n                }\n                else {\n                    return (\n                        <Marker\n                            key={`point-${cluster.properties.id}`}\n                            lat={latitude}\n                            lng={longitude}\n                            >\n                            <div>\n                                {/* onClick{() => {\n                                    \n                                }} */}\n                            </div>\n                            Hello\n                            {/* <img src=\"https://www.flaticon.com/svg/static/icons/svg/1397/1397898.svg\"/> */}\n                            {/* <button className=\"crime-marker\">\n                                <img src=\"/custody.svg\" alt=\"crime doesn't pay\" />\n                            </button> */}\n                        </Marker>\n                    )\n                }\n            })}\n            </GoogleMapReact>\n        </div>\n    </div> \n    )};\n\n\n\n// const styleDict = {\n//     apTypeId: maps.mapTypeId.SATELLITE,\n// }\n// options = {map => ({ mapTypeId: map.MapTypeId.SATELLITE, styles: [{\"featureType\": \"road.highway\", \"elementType\": \"geometry\", \"stylers\" : [{ \"color\" : \"#e9bc62\"}]}]})}\n\nexport default Map;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/popUp/popUp.jsx",["67"],"import React from 'react';\nimport './popUp.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction PopUp(props) {\n    return(\n        <Modal {... props} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create new </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.body}\n            </Modal.Body>\n            {/* <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}> Close </Button>\n                <Button variant=\"primary\" onClick={props.onHide}> Add New Marker </Button>\n            </Modal.Footer> */}\n        </Modal>\n    );\n}\n\nexport default PopUp;","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/form/form.jsx",["68","69","70","71","72"],"import './form.css';\nimport React, {useEffect , useState} from 'react';\nimport { Controller, useForm, useFormContext } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport ErrorBoundary from '../errorBoundary/errorBoundary'\nimport Dropzone from '../dropzone/drop'\nconst axios = require('axios');\nvar FormData = require('form-data');\n\n function Form(props) {\n    const {lat, lng, setModalShow, allUser} = props;\n\n    const {register, handleSubmit, control, setValue}  = useForm();\n\n    const onSubmit = async (data) => {\n\n        const images = data.images;\n        let imgId = [];\n        if (images.length != 0) {\n            let formData = new FormData();\n            images.forEach((img) => {\n                formData.append('img', img);\n            })\n\n\n            let config = {\n                method: 'post',\n                url: 'http://localhost:5555/uploadImage',\n                data : formData\n            }\n\n            // TODO: change for production\n            let res = await axios(config);\n            imgId = res.data.id;  \n        } \n\n        delete data['images'];\n        data = {...data, imgId: imgId, lat: lat, lng: lng, category:\"Point\"};\n\n\n        console.log(JSON.stringify(data));\n        \n        let res = await axios.post('http://localhost:5555/uploadPointer', data, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        console.log(res.data);\n        setModalShow(false);\n    };\n    \n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n            <input name=\"title\" ref={register({required: true, maxLength:10})} />\n            <textarea name=\"description\" ref={register({required: true, maxLength:30})} />\n            <div>\n                <input name=\"icon\" type=\"radio\" value=\"1\" ref={register({required: true, max:1})}/>\n                <input name=\"icon\" type=\"radio\" value=\"2\" ref={register({required: true, max:1})} />\n                <input name=\"icon\" type=\"radio\" value=\"3\" ref={register({required: true, max:1})} />\n                <input name=\"icon\" type=\"radio\" value=\"4\" ref={register({required: true, max:1})} />\n            </div>\n            <Controller\n                name=\"people\"\n                as={Select}\n                isMulti\n                options={[{value:'all', label:'all users'}, ...allUser]} //TODO: implement select all \n                control={control}\n                rules={{required:true}}\n                defaultValue={null}\n            />\n\n            <Controller\n                name=\"images\"\n                control={control}\n                render={(onChange) =>\n                    <Dropzone onChange={onChange} register={register} setValue={setValue}></Dropzone>\n                }\n            \n            />\n\n            <input type=\"submit\" />\n        </form>\n    );\n}\n\nexport default Form\n\n","/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/rdu.jsx",["73"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/errorBoundary/errorBoundary.jsx",[],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/depre.jsx",["74","75","76","77","78"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/components/dropzone/drop.jsx",["79","80","81","82","83","84","85"],"import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport \"./drop.css\";\n\nfunction Dropzone(props) {\n    const {onChange, register, setValue} = props\n    const [files, setFiles] = React.useState([]);\n    const [buffer, setBuffer] = React.useState([]);\n    const onDrop = React.useCallback(async function(acceptedFiles) {\n\n        acceptedFiles.forEach(async function(file) {\n            const reader = new FileReader();\n            reader.onload = function(e) {\n                // const arrayBuffer = reader.result;\n                // const Uint8 = new Uint8Array(arrayBuffer)\n                // console.log(Uint8);\n                // buffer.push(Uint8); //not sure why setBuffer doesn't work\n                // console.log(`buffer : ${buffer}`);\n                console.log(`file type ${typeof file}`);\n                const base64 = reader.result;\n                buffer.push(base64);\n                files.push(file);\n                // console.log(`buffer: ${buffer}`);\n\n            }\n            // reader.readAsArrayBuffer(file);\n            reader.readAsDataURL(file);\n\n        });\n\n        // setFiles(prev => [...prev, ...acceptedFiles]); //Able to retrieve previous state\n        console.log(\"file accepted\");\n    }, []);\n    const { getRootProps, getInputProps } = useDropzone({onDrop, multiple:true, accept: 'image/*'});\n\n    useEffect(() => {\n        register({name: 'images'});\n    }, [])\n\n    useEffect(() => {\n        console.log(`files ${files}`)\n        setValue(\"images\", files); \n        console.log(\"set value\");\n    }, [files])\n\n    const fileList = files.map(file => (\n    <li key={file.path}>\n        {file.path} - {file.size} bytes\n    </li>\n    ));\n\n\n\n    return (\n    <section className=\"container\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <aside>\n        <ul>{fileList}</ul>\n        </aside>\n    </section>\n    );\n    }\n\nexport default Dropzone;",["86","87"],"/Users/athena/Desktop/projects/truchas-map/truchas-goodbye/src/mongo.js",[],["88","89"],{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"99","line":24,"column":23,"nodeType":"92","messageId":"93","endLine":24,"endColumn":37},{"ruleId":"90","severity":1,"message":"100","line":25,"column":26,"nodeType":"92","messageId":"93","endLine":25,"endColumn":43},{"ruleId":"90","severity":1,"message":"101","line":28,"column":10,"nodeType":"92","messageId":"93","endLine":28,"endColumn":17},{"ruleId":"90","severity":1,"message":"102","line":28,"column":19,"nodeType":"92","messageId":"93","endLine":28,"endColumn":29},{"ruleId":"90","severity":1,"message":"103","line":29,"column":22,"nodeType":"92","messageId":"93","endLine":29,"endColumn":35},{"ruleId":"90","severity":1,"message":"104","line":2,"column":20,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"90","severity":1,"message":"105","line":41,"column":11,"nodeType":"92","messageId":"93","endLine":41,"endColumn":24},{"ruleId":"90","severity":1,"message":"106","line":42,"column":15,"nodeType":"92","messageId":"93","endLine":42,"endColumn":19},{"ruleId":"90","severity":1,"message":"107","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"104","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"108","line":2,"column":28,"nodeType":"92","messageId":"93","endLine":2,"endColumn":36},{"ruleId":"90","severity":1,"message":"109","line":3,"column":31,"nodeType":"92","messageId":"93","endLine":3,"endColumn":45},{"ruleId":"90","severity":1,"message":"110","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":19,"column":27,"nodeType":"113","messageId":"114","endLine":19,"endColumn":29},{"ruleId":"90","severity":1,"message":"115","line":12,"column":11,"nodeType":"92","messageId":"93","endLine":12,"endColumn":23},{"ruleId":"90","severity":1,"message":"104","line":1,"column":29,"nodeType":"92","messageId":"93","endLine":1,"endColumn":38},{"ruleId":"90","severity":1,"message":"116","line":8,"column":12,"nodeType":"92","messageId":"93","endLine":8,"endColumn":24},{"ruleId":"90","severity":1,"message":"117","line":9,"column":22,"nodeType":"92","messageId":"93","endLine":9,"endColumn":30},{"ruleId":"90","severity":1,"message":"118","line":13,"column":70,"nodeType":"92","messageId":"93","endLine":13,"endColumn":82},{"ruleId":"90","severity":1,"message":"119","line":13,"column":84,"nodeType":"92","messageId":"93","endLine":13,"endColumn":96},{"ruleId":"90","severity":1,"message":"120","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"121","line":8,"column":12,"nodeType":"92","messageId":"93","endLine":8,"endColumn":20},{"ruleId":"90","severity":1,"message":"122","line":9,"column":19,"nodeType":"92","messageId":"93","endLine":9,"endColumn":27},{"ruleId":"90","severity":1,"message":"123","line":10,"column":20,"nodeType":"92","messageId":"93","endLine":10,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":35,"column":8,"nodeType":"126","endLine":35,"endColumn":10,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":40,"column":8,"nodeType":"126","endLine":40,"endColumn":10,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":46,"column":8,"nodeType":"126","endLine":46,"endColumn":15,"suggestions":"131"},{"ruleId":"94","replacedBy":"132"},{"ruleId":"96","replacedBy":"133"},{"ruleId":"94","replacedBy":"134"},{"ruleId":"96","replacedBy":"135"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'logo' is defined but never used.","'setSideBarShow' is assigned a value but never used.","'setSideBarContent' is assigned a value but never used.","'feature' is assigned a value but never used.","'setFeature' is assigned a value but never used.","'setPointQuery' is assigned a value but never used.","'useEffect' is defined but never used.","'markerOnClick' is assigned a value but never used.","'json' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'useFormContext' is defined but never used.","'ErrorBoundary' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'handleSubmit' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'register' is assigned a value but never used.","'isDragAccept' is assigned a value but never used.","'isDragReject' is assigned a value but never used.","'ReactDOM' is defined but never used.","'onChange' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'setBuffer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'buffer' and 'files'. Either include them or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["140"],["136"],["137"],["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [buffer, files]",{"range":"147","text":"148"},"Update the dependencies array to be: [register]",{"range":"149","text":"150"},"Update the dependencies array to be: [files, setValue]",{"range":"151","text":"152"},[1298,1300],"[buffer, files]",[1470,1472],"[register]",[1612,1619],"[files, setValue]"]